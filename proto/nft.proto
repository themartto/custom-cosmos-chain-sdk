syntax = "proto3";
package LimeChain.mantrachain.mdb.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/LimeChain/mantrachain/x/mdb/types";
option (gogoproto.equal_all) = true;

message Nft {
  bytes index = 1 [(gogoproto.moretags) = "yaml:\"index\""];
  string title = 2 [(gogoproto.moretags) = "yaml:\"title\""];
  string did = 3 [(gogoproto.moretags) = "yaml:\"did\""];
  repeated NftImage images = 4 [(gogoproto.moretags) = "yaml:\"images\""];
  string url = 5 [(gogoproto.moretags) = "yaml:\"url\""];
  string description = 6 [(gogoproto.moretags) = "yaml:\"description\""];
  repeated NftLink links = 7 [(gogoproto.moretags) = "yaml:\"links\""];
  repeated NftAttribute attributes = 8 [(gogoproto.moretags) = "yaml:\"attributes\""];
  bool resellable = 9 [(gogoproto.moretags) = "yaml:\"resellable\""];
  bytes creator = 10 [
    (gogoproto.moretags) = "yaml:\"creator\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
  string collection_id = 11 [(gogoproto.moretags) = "yaml:\"collection_id\""];
  bytes collection_index = 12 [(gogoproto.moretags) = "yaml:\"collection_index\""];
}

message NftAttribute {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string type = 1;
  string value = 2;
  string sub_value = 3;
}

message NftImage {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string type = 1;
  string url = 2;
}

message NftLink {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string type = 1;
  string url = 2;
}
